{
  "name": "RAG AI Agent",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "300a3e6a-0b01-477c-969a-2f27ee9019a9",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        300,
        1020
      ],
      "credentials": {
        "openAiApi": {
          "id": "9ELrivmyvqjgOy25",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e01693eb-b896-4727-82be-5173d9ffea8e",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1120,
        960
      ],
      "credentials": {
        "openAiApi": {
          "id": "9ELrivmyvqjgOy25",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').item.json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "a1f97524-b3e2-41e8-a413-9dec96aa0b5b",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1400,
        2300
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "8cc2da74-e052-43b5-a03a-6c12c376860d",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1240,
        2300
      ]
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the user's documents that you can check for context to answer user questions."
      },
      "id": "26e6b778-7f6a-412d-b4d7-b0a94a126302",
      "name": "Retrieve Documents",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        900,
        780
      ]
    },
    {
      "parameters": {
        "content": "## Agent Tools for RAG",
        "height": 528.85546469693,
        "width": 583.4552380860637,
        "color": 4
      },
      "id": "ea7bc5a2-34f4-4d4f-a18f-336e906bb790",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        660
      ]
    },
    {
      "parameters": {
        "content": "## Tool to Add a Google Drive File to Vector DB",
        "height": 671.8877842322804,
        "width": 2070.8894079025763,
        "color": 6
      },
      "id": "3f304346-c236-4c3c-869f-3d254c5a6974",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -440,
        1980
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "dd363cc7-ce9d-4563-88d9-4370d1276b0d",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        740,
        2180
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC",
          "mode": "list",
          "cachedResultName": "Meeting Notes",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "688af02c-13a9-4ecd-b033-77e61918aa64",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -340,
        2060
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC",
          "mode": "list",
          "cachedResultName": "Meeting Notes",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1914m3M7kRzkd5RJqAfzRY9EBcJrKemZC"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "3514efb9-1479-4eff-be76-906835e6a71e",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -340,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "a2744ec1-feef-4614-ac22-3436b9cb081f",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1000,
        2180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "314e0e20-8d74-4e17-8e21-b22f94cc48bb",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        940,
        1060
      ],
      "credentials": {
        "openAiApi": {
          "id": "9ELrivmyvqjgOy25",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "134c55f2-7a24-4f62-9eaf-e4b6fbc1227b",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        440,
        1020
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "qPc9Jt5wVXyJnx2M",
          "name": "local Postgres"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d71709a7-9266-4511-8eee-5781f6f51753",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1400,
        2500
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "047f3063-b4f6-4d88-bd58-4131f698e7a9",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        440,
        2180
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1c287245-1b96-4f4d-94bd-25bc33f2c401",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        2180
      ]
    },
    {
      "parameters": {
        "content": "## RAG AI Agent with Chat Interface",
        "height": 464.8027193303974,
        "width": 692.7866482806627
      },
      "id": "20945cdd-c828-4a29-85e1-d6a0cce2af6e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        20,
        720
      ]
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "74dda633-50cf-413d-be17-97a0b72e5e37",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        80,
        800
      ],
      "webhookId": "e985d15f-b2f6-456d-be15-97e0b1544a40"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are a personal assistant who helps answer questions from a corpus of documents when you don't know the answer yourself."
        }
      },
      "id": "de633753-4596-4349-b524-3258d633edeb",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        400,
        800
      ]
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "id": "3c93c257-6515-45a7-8d92-be8f027c6b82",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        780,
        920
      ],
      "credentials": {
        "supabaseApi": {
          "id": "9mXQ9jbnoCtVT3KC",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "771191ba-27f1-4f7f-b4e0-da37410d968b",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1280,
        2080
      ]
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        160,
        1020
      ],
      "id": "d71b2131-6d0e-44f2-97a2-6152ce608b21",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "operation": "html",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        140,
        440
      ],
      "id": "6613dcba-3686-4a9a-a539-067d23dc8687",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "triggerOn": "folder",
        "path": "/data/shared/",
        "events": [
          "add",
          "change",
          "unlink",
          "addDir",
          "unlinkDir"
        ],
        "options": {
          "awaitWriteFinish": true,
          "followSymlinks": true,
          "usePolling": true
        }
      },
      "id": "49bf494c-a9c7-4543-9410-188232e74385",
      "name": "Local File Trigger",
      "type": "n8n-nodes-base.localFileTrigger",
      "position": [
        -1280,
        1740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "=find {{ $json.directory }} -type f -name \"*.htm\" -print || true; \\\necho \"===\"; \\\nfind {{ $json.directory }} -type d -print || true"
      },
      "id": "72e6d9ee-2527-4f7f-bd9d-72e019824858",
      "name": "Get Files and Folders",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        -740,
        1640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ad893795-cae8-4418-99e0-2c68126337d3",
              "name": "files",
              "type": "array",
              "value": "={{ $json.stdout.split('===')[0].split('\\n').filter(item => !item.endsWith('Zone.Identifier')).compact() }}"
            },
            {
              "id": "0e7e8571-6b86-481d-a20c-3a7c621c562f",
              "name": "folders",
              "type": "array",
              "value": "={{ $json.stdout.split('===')[1].split('\\n').compact() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "26f1a8b5-7a09-43ab-b0a3-98ed7a99d810",
      "name": "Files and Folders to Array",
      "type": "n8n-nodes-base.set",
      "position": [
        -560,
        1640
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "35ea70c4-8669-4975-a68d-bbaa094713c0",
              "name": "directory",
              "type": "string",
              "value": "=/data/shared/"
            }
          ]
        },
        "options": {}
      },
      "id": "12bdffe8-24f4-4d14-b07a-42b5f60a83eb",
      "name": "Set Variables",
      "type": "n8n-nodes-base.set",
      "position": [
        -1000,
        1640
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "9be5a175-e7aa-4d68-9ddc-8b43b43e2d37",
              "operator": {
                "type": "array",
                "operation": "lengthGte",
                "rightType": "number"
              },
              "leftValue": "={{ $json.files }}",
              "rightValue": "={{ 1 }}"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "701203ee-e3af-44a0-bc18-61ce23989227",
      "name": "If Has Target Files...",
      "type": "n8n-nodes-base.if",
      "position": [
        -380,
        1640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## Step 1. Select the target folder\n[Read more about local file trigger](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.localfiletrigger)\n\nIn this workflow, we'll monitor a specific folder on disk that n8n has access to. Since we're using docker, we can either use the n8n volume or mount a folder from the host machine.\n\nThe local file trigger is useful to execute the workflow whenever changes are made to our target folder.",
        "height": 501.2939838391483,
        "width": 483.7926535356806,
        "color": 7
      },
      "id": "0f118574-153d-425a-b0cb-ac16fd3af132",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1320,
        1340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Step 2. Identify files that need to be organised\n[Read more about Execute Command node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.executecommand)\n\nFor all Files in the root level of our selected target folder, we want  them to be sorted and moved into categorised subdirectories. In this step, we'll use linux commands to get a list of files and folders currently present in the target folder.",
        "height": 391.527066537946,
        "width": 583.2857596176409,
        "color": 7
      },
      "id": "68e19432-4481-48d7-b676-34af6eed8da5",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -800,
        1460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1260,
        1580
      ],
      "id": "53c1314d-66a4-444c-ba2d-ada0381f6505",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.filePath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        80,
        1620
      ],
      "id": "de62317f-5b71-4760-b77c-bb03bbb07195",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "jsCode": "return $json.files.map(file => {\n  return {\n    json: {\n      filePath: file  // or '/your/base/path/' + file\n    },\n    binary: {\n        // 명시적으로 binary 필드를 생성\n        data: null  // Read Binary File 노드가 이 필드를 채울 것입니다\n    }    \n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -120,
        1620
      ],
      "id": "90d94419-8735-4bb8-b0d9-748ea547353c",
      "name": "Code"
    },
    {
      "parameters": {
        "content": "## Step 3. Read file and Extract \nIn n8n's Read Binary File node when working with an array of filenames, you'll need to properly structure the input using an Expression. ",
        "height": 380,
        "width": 720
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -140,
        1460
      ],
      "id": "18ba0d75-02be-4516-924d-00601623994f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        280,
        1620
      ],
      "id": "1e625964-9bf8-43de-ba2b-00d6d3c7e194",
      "name": "Extract from HTML"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "ca0850f9-4c66-4ad5-9360-57f3137784c7",
      "name": "Insert into Supabase Vectorstore2",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        680,
        1540
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "9mXQ9jbnoCtVT3KC",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "03b35caf-0ef7-4fab-8834-7fad1d4705c1",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        660,
        1720
      ],
      "credentials": {
        "openAiApi": {
          "id": "9ELrivmyvqjgOy25",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{$json.data}}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $json.filePath }}"
              }
            ]
          }
        }
      },
      "id": "a9214087-4fd3-4569-8b8b-a591a5138ddc",
      "name": "Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        820,
        1720
      ]
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {}
      },
      "id": "4e6a6929-18c4-4d89-9dde-1745268d8c11",
      "name": "Recursive Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1040,
        1840
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Retrieve Documents": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Retrieve Documents",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Local File Trigger": {
      "main": [
        []
      ]
    },
    "Get Files and Folders": {
      "main": [
        [
          {
            "node": "Files and Folders to Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Files and Folders to Array": {
      "main": [
        [
          {
            "node": "If Has Target Files...",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables": {
      "main": [
        [
          {
            "node": "Get Files and Folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Target Files...": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from HTML": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Seoul",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "371a45b3-470c-4940-be46-54d041045076",
  "meta": {
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "rMbagrorcfZX8oCd",
  "tags": []
}